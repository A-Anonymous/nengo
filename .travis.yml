language: c
sudo: false
notifications:
  email:
    - tbekolay@gmail.com

cache:
  directories:
    - $HOME/miniconda
    - $HOME/virtualenv

env:
  global:
    - MINICONDA_DIR="$HOME/miniconda"
    - NUMPY="1.11"
    - COVERAGE="false"
    - STATIC="false"
    - CONDA_DEPS="matplotlib jupyter"
    - PIP_DEPS="pytest pytest-xdist"
    - PIP_DIR="$HOME/virtualenv"

matrix:
  include:
    - env: PYTHON="2.7" COVERAGE="true" CACHE_NAME="JOB1"
    - env: PYTHON="2.7" STATIC="true" CACHE_NAME="JOB2"
    - env: PYTHON="2.7" NUMPY="1.7" CACHE_NAME="JOB3"
    - env: PYTHON="2.7" NUMPY="1.8" CACHE_NAME="JOB4"
    - env: PYTHON="2.7" NUMPY="1.9" CACHE_NAME="JOB5"
    - env: PYTHON="2.7" NUMPY="1.10" CACHE_NAME="JOB6"
    - env: PYTHON="3.4" CACHE_NAME="JOB7"
    - env: PYTHON="3.5" COVERAGE="true" CACHE_NAME="JOB8"

git:
  depth: 3

# Setup Miniconda
before_install:
  - chmod a+x travis/install-conda.sh
  - travis/install-conda.sh

# Install packages with conda, then pip
install:
  - export PATH="$PATH:$HOME/miniconda/bin"
  - hash -r
  - if [[ "$COVERAGE" == "true" ]]; then
      export PIP_DEPS="pytest coverage";
    elif [[ "$STATIC" == "true" ]]; then
      export CONDA_DEPS="";
      export PIP_DEPS="flake8 pylint";
    fi
  - if [[ -n "$NUMPY" && "$STATIC" == "false" ]]; then
      export CONDA_DEPS="$CONDA_DEPS numpy=$NUMPY";
    fi
  - if [[ -n "$CONDA_DEPS" ]]; then eval conda install "$CONDA_DEPS"; fi
  - if [[ -n "$PIP_DEPS" ]]; then eval pip install "$PIP_DEPS"; fi

# Run the tests
script:
  - mkdir -p "$HOME/.ipython/profile_default"
  - "echo 'c.HistoryAccessor.enabled = False\n' > $HOME/.ipython/profile_default/ipython_config.py"
  - if [[ "$STATIC" == "false" ]]; then
      python -c "import numpy; numpy.show_config()";
      python setup.py -q develop;
      if [[ "$COVERAGE" == "false" ]]; then
        py.test nengo -n 2 -v --duration 20;
      else
        coverage run --rcfile .coveragerc --source nengo -m py.test nengo -v --duration 20 && coverage report;
      fi
    else
      flake8 -v nengo && pylint nengo;
    fi

after_success:
  - if [[ "$COVERAGE" == "true" ]]; then
      eval "bash <(curl -s https://codecov.io/bash)";
    fi
